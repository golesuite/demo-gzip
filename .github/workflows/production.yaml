name: Update PROD application image
on:
  push:
    branches:
      - main
env:
  GITHUB_TAG: ${{ github.REF_NAME }}
  DOCKER_REPOSITORY: gole/project-gzip

jobs:
  docker-build-push :
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker build and push image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: gole/project-gzip:latest

            #deploy-kubernetes:
            #runs-on: ubuntu-latest
            #needs: docker-build-push
            #steps:
            #- name: Kubernetes config
            #run: |
            #curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
#            chmod +x kubectl
#            mv ./kubectl /usr/local/bin
#            echo ${{ secrets.K8S_GOLE_CA }} | base64 -d > k8s.ca
#            echo ${{ secrets.K8S_GOLE_CRT }} | base64 -d > k8s.crt
#            echo ${{ secrets.K8S_GOLE_KEY }} | base64 -d > k8s.key
#            kubectl config set-cluster k0s --server=https://space.golesuite.com:6443 --certificate-authority="$(pwd)/k8s.ca"
#            kubectl config set-credentials admin --client-certificate="$(pwd)/k8s.crt" --client-key="$(pwd)/k8s.key"
#            kubectl config set-context k0s --cluster=k0s --user=admin
#            kubectl config use-context k0s
#            kubectl -n demo rollout restart deployment/gzip-project
