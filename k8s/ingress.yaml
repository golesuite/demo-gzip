apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io: /
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~ [A-Z] {
        if ($request_method = POST ) {
          access_by_lua_block {
	      local match = ngx.re.match(ngx.var.request_body, "company")
	      if match then
                ngx.redirect(string.lower(ngx.var.uri), 301);
              end
          }
        }
      }
  name: gzip-project
spec:
  rules:
  - host: gzip.golesuite.com
    http:
      paths:
      - backend:
          service:
            name: gzip-project
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - gzip.golesuite.com
    secretName: gzip-demo-golesuite-com
     #set $fastcgi '';
     #set $upstream '';
     #access_by_lua '
     #ngx.req.read_body()
	   #    local data = ngx.req.get_body_data()
	   #    local  match = ngx.re.match(ngx.var.request_body, "company")
	   #    if match then
	   #        ngx.var.fastcgi = "unix:/var/run/php-fpm/php-fpm.sock"
	   #        ngx.var.upstream = "algoapp"
           #    else
	   #        ngx.var.upstream = "main"
           #    end
           #    ';
           # proxy_pass $fastcgi;
           # }
              #ngx.var.fastcgi = "unix:/var/run/php-fpm/php-fpm.sock"
              #else
              #ngx.var.fastcgi = "main"
              #
           #access_by_lua_block {
           #   ngx.req.read_body()
           #   local request_body = ngx.req.get_body_data()
           #   local match = ngx.re.match(ngx.var.request_body, "company")
           #   if match then
           #     ngx.redirect(string.lower(ngx.var.uri), 301);
           #   end
           # }
           # local match = ngx.re.match(ngx.var.request_body, "company")
           # if match then
